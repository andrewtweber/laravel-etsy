# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

references:
  workspace_root: &workspace_root
    /home/circleci
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build_backend:
    docker:
      # Specify the version you desire here
      - image: cimg/php:8.1
    steps:
      - checkout
      - run:
          name: Install PHP extensions
          command: |
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
            sudo docker-php-ext-install bcmath curl mbstring pdo_mysql xml
      - restore_cache:
          keys:
            - composer-v2-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - composer-v2-
      - run:
          name: Install composer packages
          command: |
            composer install -n --prefer-dist --classmap-authoritative
      - save_cache:
          key: composer-v2-{{ checksum "composer.json" }}
          paths:
            - vendor

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - project

  test_backend:
    docker:
      - image: cimg/php:8.1

      - image: cimg/mysql:8.0
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: forge
          MYSQL_DATABASE: forge
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: 'forge'

    steps:
      - *attach_workspace
      - run:
          name: Wait for MySQL
          command: dockerize -wait tcp://localhost:3306
      - run:
          name: PHP Unit tests
          command: ./vendor/bin/phpunit

  inspect_backend:
    docker:
      - image: cimg/php:8.1
    steps:
      - *attach_workspace
      - run:
          name: PHP Static Analysis
          command: ./vendor/bin/phpstan

workflows:
  backend-workflow:
    jobs:
      - build_backend
      - test_backend:
          requires:
            - build_backend
      - inspect_backend:
          requires:
            - build_backend
